[{"C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\index.js":"1","C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\App.js":"2","C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\reportWebVitals.js":"3","C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\SearchBar.js":"4","C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\Header.js":"5","C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\NominationList.js":"6","C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\SearchResult.js":"7","C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\SearchResultContainer.js":"8","C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\ListFullModal.js":"9","C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\MovieModal.js":"10"},{"size":543,"mtime":1609295141724,"results":"11","hashOfConfig":"12"},{"size":4867,"mtime":1609395737942,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1317,"mtime":1609397034429,"results":"15","hashOfConfig":"12"},{"size":406,"mtime":1609218101124,"results":"16","hashOfConfig":"12"},{"size":1547,"mtime":1609218125724,"results":"17","hashOfConfig":"12"},{"size":1965,"mtime":1609390954635,"results":"18","hashOfConfig":"12"},{"size":1829,"mtime":1609395986174,"results":"19","hashOfConfig":"12"},{"size":1900,"mtime":1609364151854,"results":"20","hashOfConfig":"12"},{"size":3162,"mtime":1609396499297,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"rqzxju",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\index.js",[],["46","47"],"C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\App.js",["48"],"import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header.js\";\nimport SearchBar from \"./components/SearchBar.js\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SearchResultContainer from \"./components/SearchResultContainer.js\";\nimport NominationList from \"./components/NominationList.js\";\nimport ListFullModal from \"./components/ListFullModal.js\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      nominations: JSON.parse(localStorage.getItem(\"nominations\")) || [],\n      nominationLimit: false,\n      showSuccessModal: false,\n      showFullModal: false,\n      searchInput: \"\",\n    };\n    this.onChangeSearchText = this.onChangeSearchText.bind(this);\n    this.search = this.search.bind(this);\n    this.nominate = this.nominate.bind(this);\n    this.deleteNom = this.deleteNom.bind(this);\n    this.closeListFull = this.closeListFull.bind(this);\n  }\n  search(searchString) {\n    if (searchString) {\n      fetch(\n        \"https://www.omdbapi.com/?apikey=1d8b2857&type=movie&r=json&s=\" +\n          searchString.target.value\n      )\n        .then((res) => res.json())\n        .then((json) => {\n          var newState = json.Search\n            ? Object.assign(\n                { ...this.state },\n                { movies: json.Search, searchInput: searchString.target.value }\n              )\n            : Object.assign(\n                { ...this.state },\n                { movies: [], searchInput: searchString.target.value }\n              );\n          this.setState(newState);\n          console.log(newState);\n        });\n    }\n  }\n  nominate(movie) {\n    if (\n      this.state.nominations.length < 5 &&\n      !this.state.nominations.some((item) => movie.imdbID === item.imdbID)\n    ) {\n      var newState = { ...this.state };\n      newState.nominations.push(movie);\n      newState.nominationLimit = false;\n      if (newState.nominations.length === 5) {\n        newState = Object.assign(\n          { ...newState },\n          { nominationLimit: true, showSuccessModal: true }\n        );\n      }\n      this.setState(newState, () => {\n        localStorage.setItem(\n          \"nominations\",\n          JSON.stringify(this.state.nominations)\n        );\n      });\n    } else if (this.state.nominations.length === 5) {\n      var newState = Object.assign(\n        { ...this.state },\n        { nominationLimit: true, showFullModal: true }\n      );\n      this.setState(newState);\n    }\n  }\n  deleteNom(movie) {\n    var newState = { ...this.state };\n    var index = this.state.nominations.findIndex(\n      (item) => movie.imdbID === item.imdbID\n    );\n    if (index !== -1) {\n      newState.nominations.splice(index, 1);\n      this.setState(newState, () => {\n        localStorage.setItem(\n          \"nominations\",\n          JSON.stringify(this.state.nominations)\n        );\n      });\n    }\n  }\n  closeListFull() {\n    this.setState({ showSuccessModal: false, showFullModal: false });\n  }\n  onChangeSearchText(val) {\n    this.setState({ searchInput: val });\n    this.search(val);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Container style={styles.body}>\n          <Row xs={1} md={1} lg={1}>\n            <SearchBar\n              search={this.search}\n              onChangeSearchText={this.onChangeSearchText}\n            />\n          </Row>\n          <Row xs={1} md={1} lg={2} style={{ justifyContent: \"center\" }}>\n            <Col>\n              <SearchResultContainer\n                movies={this.state.movies}\n                nominate={this.nominate}\n                nominations={this.state.nominations}\n                searchInput={this.state.searchInput}\n              />\n            </Col>\n            <Col>\n              <NominationList\n                nominations={this.state.nominations}\n                deleteNom={this.deleteNom}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <ListFullModal\n          closeListFull={this.closeListFull}\n          showSuccessModal={this.state.showSuccessModal}\n          showFullModal={this.state.showFullModal}\n        />\n        <footer style={styles.footer}>\n          <div style={{ fontFamily: \"Roboto Mono\", fontSize: 11 }}>\n            Icons made by{\" \"}\n            <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">\n              Freepik\n            </a>{\" \"}\n            from{\" \"}\n            <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n              www.flaticon.com\n            </a>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\nconst styles = {\n  body: {\n    margin: \"auto\",\n    paddingTop: 20,\n    width: \"80%\",\n  },\n  footer: {\n    paddingTop: \"40px\",\n    bottom: 0,\n    alignText: \"center\",\n  },\n};\nexport default App;\n","C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\reportWebVitals.js",[],"C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\SearchBar.js",["49"],"import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport loupe from \"../assets/images/loupe.png\";\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <InputGroup style={styles.barContainer}>\r\n        <InputGroup.Prepend style={styles.prepend}>\r\n          <InputGroup.Text style={styles.prepend} id=\"basic-addon1\">\r\n            <img\r\n              src={loupe}\r\n              style={styles.loupe}\r\n              alt=\"Magnifying glass icon\"\r\n            ></img>\r\n          </InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <Form.Control\r\n          type=\"text\"\r\n          label=\"Search Movie Titles\"\r\n          style={styles.bar}\r\n          placeholder=\"Search Movie Titles ...\"\r\n          onChange={this.props.onChangeSearchText}\r\n        />\r\n      </InputGroup>\r\n    );\r\n  }\r\n}\r\nconst styles = {\r\n  barContainer: {\r\n    marginBottom: \"20px\",\r\n  },\r\n  prepend: {\r\n    borderTopLeftRadius: \"16px\",\r\n    borderBottomLeftRadius: \"16px\",\r\n  },\r\n  bar: {\r\n    borderColor: \"#C1C1C1\",\r\n    borderTopRightRadius: \"16px\",\r\n    borderBottomRightRadius: \"16px\",\r\n    fontFamily: \"Roboto Mono\",\r\n  },\r\n  loupe: {\r\n    height: \"20px\",\r\n  },\r\n};\r\nexport default SearchBar;\r\n","C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\Header.js",[],"C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\NominationList.js",[],"C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\SearchResult.js",[],"C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\SearchResultContainer.js",[],"C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\ListFullModal.js",[],"C:\\Users\\diana\\Documents\\PersonalProjects\\shopify-challenge\\src\\components\\MovieModal.js",["50"],"import React from \"react\";\r\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\r\n\r\nclass MovieModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movieDetails: {},\r\n    };\r\n    this.fetchMovieDetails = this.fetchMovieDetails.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.fetchMovieDetails();\r\n  }\r\n  fetchMovieDetails() {\r\n    fetch(\r\n      \"https://www.omdbapi.com/?apikey=1d8b2857&r=json&i=\" +\r\n        this.props.movie.imdbID\r\n    )\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({ movieDetails: json });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.showMovieModal}\r\n        onHide={() => this.props.closeMovieModal()}\r\n        style={styles.modal}\r\n        size=\"lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {this.props.movie.Title} ({this.props.movie.Year})\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={styles.modalBody}>\r\n          <Container>\r\n            <Row xs={1} md={2} lg={2}>\r\n              <Col>\r\n                <img style={styles.poster} src={this.props.movie.Poster}></img>\r\n              </Col>\r\n              <Col style={styles.movieDetails}>\r\n                <span>\r\n                  <h6 style={styles.detailHeading}>Release Date:</h6>\r\n                  <p>{this.state.movieDetails.Released}</p>\r\n\r\n                  <h6 style={styles.detailHeading}>Director:</h6>\r\n                  <p>{this.state.movieDetails.Director}</p>\r\n\r\n                  <h6 style={styles.detailHeading}>Starring:</h6>\r\n                  <p>{this.state.movieDetails.Actors}</p>\r\n\r\n                  <h6 style={styles.detailHeading}>Summary:</h6>\r\n                  <p>{this.state.movieDetails.Plot}</p>\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => this.props.closeMovieModal()}\r\n            style={styles.closeButton}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            disabled={this.props.disableNominate}\r\n            style={styles.nomButton}\r\n            onClick={() => this.props.nominate(this.props.movie)}\r\n          >\r\n            Nominate\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nconst styles = {\r\n  modal: {\r\n    fontFamily: \"Roboto Mono\",\r\n  },\r\n  modalBody: {\r\n    fontSize: \"13px\",\r\n  },\r\n  poster: {\r\n    maxHeight: \"300px\",\r\n    display: \"block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  movieDetails: {\r\n    paddingHorizontal: \"10px\",\r\n    paddingTop: \"10px\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n  detailHeading: {\r\n    backgroundColor: \"#FDC221\",\r\n  },\r\n  nomButton: {\r\n    backgroundColor: \"#A50104\",\r\n    borderWidth: \"2px\",\r\n    borderColor: \"#FDC221\",\r\n    borderRadius: \"16px\",\r\n  },\r\n  closeButton: {\r\n    borderRadius: \"16px\",\r\n    paddingBottom: \"5px\",\r\n  },\r\n};\r\n\r\nexport default MovieModal;\r\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":71,"column":11,"nodeType":"57","messageId":"58","endLine":71,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":6,"column":3,"nodeType":"61","messageId":"62","endLine":8,"endColumn":4},{"ruleId":"63","severity":1,"message":"64","line":43,"column":17,"nodeType":"65","endLine":43,"endColumn":74},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-redeclare","'newState' is already defined.","Identifier","redeclared","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]